#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_SIZE 100

struct Stack {
    int items[MAX_SIZE];
    int top;
};

void push(struct Stack *s, int item) {
    if (s->top == MAX_SIZE - 1) {
        printf("Stack Overflow\n");
        return;
    }
    s->items[++s->top] = item;
}

int pop(struct Stack *s) {
    if (s->top == -1) {
        printf("Stack Underflow\n");
        return -1;
    }
    return s->items[s->top--];
}

int evaluatePostfix(char *exp) {
    struct Stack stack;
    stack.top = -1;

    for (int i = 0; exp[i] != '\0'; ++i) {
        if (isdigit(exp[i])) {
            push(&stack, exp[i] - '0');
        } else {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);

            switch (exp[i]) {
                case '+':
                    push(&stack, operand1 + operand2);
                    break;
                case '-':
                    push(&stack, operand1 - operand2);
                    break;
                case '*':
                    push(&stack, operand1 * operand2);
                    break;
                case '/':
                    push(&stack, operand1 / operand2);
                    break;
                default:
                    printf("Invalid operator\n");
                    return -1;
            }
        }
    }
    return pop(&stack);
}

int main() {
    char exp[MAX_SIZE];
    printf("Enter a postfix expression: ");
    fgets(exp, MAX_SIZE, stdin);

    int result = evaluatePostfix(exp);
    if (result != -1) {
        printf("Result: %d\n", result);
    }

    return 0;
}
